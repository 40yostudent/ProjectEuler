//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import Foundation

#warning("should be done with a sequence")

public func even_fibonacci_numbers() {
    
    var fib4m: [Int] = []
    
    func fib(_ n: Int) -> Int? {
        var output = 0
        if n < 2 {
            output = 1
        } else {
            output = fib(n-1)!+fib(n-2)!
        }
        return output
    }
    
    var number = 0
    while let fibnumber = fib(number), fibnumber < 4_000_000 {
        fib4m.append(fibnumber)
        number += 1
    }
    print(fib4m.filter({$0 % 2 == 0}).reduce(0, +))
}
